/*h1{
    /*to change the color of the background until the end of the screen to the h1 element in HTML file
    background-color: rgb(10, 131, 237);
    /*to change the color of the letters in HTML file
    color:coral
}
*/

/*The best way to do the work in CSS, is to have classes, because there could be many different h1 headings, and you
might just want to change the specific class, not the headings that have h1 style*/

/*calling the class with the .(dot)*/
.myclass{
    color:rgb(72, 73, 33)
}
.myclass2{
    color:blue;
}

/*The hashtag '#' is an id selector used to target a single specific element with a unique id,
 while a period '. ' is a class selector used to target multiple elements with a particular class*/
/*Do an actual example with # later, write a p element stating you will do that*/
 #test{
    color:aquamarine;
}
.text{
    background-color: black;
    color:rgb(233, 147, 18)
}
/*Now geometric figures*/
.square{
    width:300px;
    height:300px;
    background-color: red;
    border: 10px solid black;
}
.rectangle{
    width: 500px;
    height: 100px;
    background-color: brown;
    border: 7px solid black;
}
.circle{
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: blue;
    border:7px solid black
    /*So in order to make a circle, first you have to make a square, and then afterwards, to make a 
    perfect circle, just put border radius at 50%, not px but a percentage, the rest is similar*/

}
@import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');
.text1{
    font-size: 50px;
    color:rgba(18, 94, 49, 0.51);
    font-family: 'Odibee Sans', cursive;

}
.cont{
    width: auto;
    height: 300px;
    border: 1px solid red;
}
.item{
    width:100px;
    height: 100px;
    background-color: brown;
    margin: 50 10; /*margin is an invisible space around the box, or an item*/
    padding:10px;
    float:left;
}
.item1{
    box-sizing: content-box;
    width:200px;
    height: 200px;
    background-color: rgb(18, 49, 224);
    margin:50px 50px;/*What the margin does: first number does up and down movement
    the second number does right and left relative to the size of the box border*/
    /*top: 50%;*/
    padding:10px;
    left:50px;
    float:right;
}
.object1{
    width: 200px;
    height: 200px;
    background-color: aqua;
    margin-left: 0px; /*0px will put it in the center*/
    /*transform: translateX(100px);
    transform: translateY(100px);
    */
}
.object2{
    width:200px;
    height: 200px;
    background-color: red;
    margin-top: 20px;
    transform: translateY(-100px);
    /*translateX and translateY margin and padding stays the same in idea, as default
    and just brings down the object, or up so what does margin do?*/
    /*margin-create space around elements, outside of any defined borders*/
    /*What does transform: translateX(0px) do?
    The translate() CSS function repositions an element in the horizontal
     and/or vertical directions. Its result is a <transform-function> data type.*/

     /*list-style: none takes away numbers/bullet points
        header nav li{
            display: inline;
            inline vs inline block: inline will not allow vertical padding;
            Understand the display property
        }
     */
}
